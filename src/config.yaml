# Rust ML Project Structure Configuration

# Version control and development tools
- .dvc  # Data version control
- docker:
    - Dockerfile
    - .dockerignore
    - docker-compose.yml

# Main workspace crates
- crates:
    - ml-core:  # Core functionality and shared types
        - src:
            - lib.rs
            - error.rs
            - types.rs
            - traits.rs
        - tests:
            - test_utils.rs
        - benches:
            - bench_main.rs
    - ml-data:  # Data processing and pipelines
        - src:
            - lib.rs
            - pipeline.rs
            - preprocessing.rs
            - features.rs
            - validation.rs
        - tests:
            - data_tests.rs
    - ml-models:  # Model implementations
        - src:
            - lib.rs
            - linear.rs
            - tree.rs
            - ensemble.rs
            - metrics.rs
        - tests:
            - model_tests.rs
    - ml-train:  # Training and evaluation
        - src:
            - lib.rs
            - trainer.rs
            - evaluation.rs
            - hyperparams.rs
        - tests:
            - training_tests.rs

# Data directories
- data:
    - raw:  # Original unmodified data
    - processed:  # Cleaned and processed data
    - train:  # Training datasets
    - test:   # Test datasets
    - validate:  # Validation datasets
    - schema:  # Data schema definitions
        - features.json
        - metadata.json

# Output and artifacts
- artifacts:
    - models:  # Saved model files
        - checkpoints:
        - final:
    - plots:  # Generated visualizations
        - training:
        - evaluation:
    - metrics:  # Performance metrics
        - training_metrics.json
        - validation_metrics.json

# Documentation and research
- docs:
    - api:  # API documentation
    - design:  # Design documents
    - research:  # Research notes and papers
    - examples:  # Usage examples
    - benchmarks:  # Benchmark results

# Configuration
- config:
    - model:
        - hyperparams.yaml
        - architecture.yaml
    - data:
        - preprocessing.yaml
        - validation.yaml
    - training:
        - train_config.yaml
    - logging:
        - log4rs.yaml

# Development tools and scripts
- scripts:
    - setup.sh
    - benchmark.sh
    - profile.sh
    - data_validation.sh

# Logs
- logs:
    - training:
    - evaluation:
    - benchmarks:

# Project files
- files:
    - README.md
    - Cargo.toml
    - rust-toolchain.toml
    - .gitignore
    - .rustfmt.toml
    - .clippy.toml
    - LICENSE

# Benchmarking and profiling
- benches:
    - criterion:
        - training_bench.rs
        - inference_bench.rs
    - flamegraph:
        - profile_configs:

# Examples
- examples:
    - basic_training.rs
    - data_pipeline.rs
    - model_inference.rs
    - custom_model.rs
